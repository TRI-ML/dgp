name: coverage
on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'
jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      OS: ubuntu-18.04
      PYTHON: '3.6'
      COVERAGE_TOTAL: 24 #Coverage threshold percentage
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: ‘2’ #Original commit + code cov badge commit
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.6
    - name: Install dependencies
      id: coverage-installer
      run: |
        python -m pip install --upgrade pip
        pip install cython==0.29.21 numpy==1.19.4
        sudo apt-get install jq
        pip install -r requirements.txt
        pip install coverage-badge
        coverage run -m pytest
        coverage-badge -f -o docs/coverage.svg
        COVERAGE_SCORE=$(coverage json -o /dev/stdout | jq .totals.percent_covered)
        echo "::set-output name=coverageScore::$COVERAGE_SCORE"
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v6
      id: changed_files
      with:
        files: docs/coverage.svg
    - name: Commit code coverage badge
      if: ${{ steps.changed_files.outputs.files_changed == 'true' && github.event_name != 'pull_request'}}
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add docs/coverage.svg
        git commit -m "test: update coverage.svg"
        git reset --soft HEAD~2 &&
        git commit
    - name: Push code coverage badge
      if: ${{ steps.changed_files.outputs.files_changed == 'true' && github.event_name != 'pull_request'}}
      uses: ad-m/github-push-action@master
      with:
        force: true
        github_token: ${{ secrets.github_token }}
        branch: ${{ github.event.pull_request.head.repo.full_name }}
    - name: Coverage total fail - exit
      if: ${{github.event_name == 'pull_request' && steps.coverage-installer.outputs.coverageScore < env.COVERAGE_TOTAL}}
      run: |
        echo "cov total fail ${{ steps.coverage-installer.outputs.coverageScore }}"
        exit 1