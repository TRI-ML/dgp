// Copyright 2019-2021 Toyota Research Institute.  All rights reserved.
// Definitions for a sample within a dataset.
syntax = "proto3";

package dgp.proto;

import "google/protobuf/any.proto";

import "dgp/proto/file_datum.proto";
import "dgp/proto/geometry.proto";
import "dgp/proto/identifiers.proto";
import "dgp/proto/image.proto";
import "dgp/proto/point_cloud.proto";
import "dgp/proto/radar_point_cloud.proto";

// Calibration for a sample
message SampleCalibration {
  // Sensor names for each of the corresponding datums
  repeated string names = 1;

  // Intrinsics of the corresponding datum
  repeated CameraIntrinsics intrinsics = 2;

  // Extrinsincs of the corresponding datum with respect to the first datum
  // [T_0, T_1, T_2] -> [T_0.inv() * T_0, T_0.inv() * T_1, T_0.inv() * T_2]
  repeated Pose extrinsics = 3;
}

// DatumValue that takes one of many data type values
message DatumValue {
  oneof datum_oneof {
    Image image = 1;
    PointCloud point_cloud = 2;
    FileDatum file_datum = 3;
    RadarPointCloud radar_point_cloud = 4;
  }
}

// Datum encapsulates a single data element and associated metadata to
// uniquely identify it in a series of logged data.
message Datum {
  // Datum identifier
  // Unique identifier to a datum in a specific log
  DatumId id = 1;

  // Datum identifier key
  //
  // key = sha1(datum_id) = sha1(SerializeToString(DatumId(...))
  string key = 2;

  // Datum envelope
  DatumValue datum = 3;

  // Next datum hash key.
  // The sha1 hash to the datum_id that follows this one.
  // The hash corresponds to the hash of the DatumValue object.
  // If empty, this datum is the last item in the linked list.
  string next_key = 4;

  // Previous datum hash key.
  // The datum hash to the datum_id that precedes this one.
  // The hash corresponds to the hash of the DatumValue object.
  // If empty, this datum is the first item in the linked list.
  string prev_key = 5;
}


// Dataset sample that refers to data associated to a particular timestamp.
//
// A dataset sample is a container that encapsulates
// time-synchronized sensor data (images, point clouds, GPS/IMU etc),
// along with their associated annotations. Since sensor data are
// recorded in an asynchronous manner, the time-synchronization is
// assumed to be approximate. Samples within a scene are expected
// to have the same number of datums as their previous and next samples.
// In addition, we assume that the first sample in a scene will be the
// first datum in its chain (i.e. the datum(s) will all have
// prev_key set to null).
message Sample {
  // Unique sample identifier (See dgp.idenfiers.proto)
  // For samples, the "name" field is ignored.
  // Typically, list of datum items in a sample are synchronized
  // to the first item in the datum list.
  DatumId id = 1;

  // List of datum keys encapsulated in the sample
  repeated string datum_keys = 2;

  // Calibration identifier (sha1 of the calibration object)
  string calibration_key = 3;

  // Sample-specific metadata
  // Optional, miscellaneous enriched annotations
  map<string, google.protobuf.Any> metadata = 4;
}
