// Copyright 2021 Toyota Research Institute.  All rights reserved.
// Definitions for Map and traffic control signals.

syntax = "proto3";

package dgp.proto;

import "dgp/proto/geometry.proto";
import "dgp/proto/identifiers.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

// Coordinates on the map.
message Point3D{
  float x = 1;
  float y = 2;
  float z = 3;
}

// Basic container for line divider on road, contains sequence of points to form a polyline.
message LineDivider{
    // List of points to form a continuous line.
    repeated Point3D way_points = 1;

    // Enum of types of the line divider.
    enum DividerType {
    UNKNOWN = 0;
    NONE = 1;
    SINGLE_YELLOW_SOLID = 2;
    SINGLE_WHITE_SOLID = 3;
    SINGLE_YELLOW_DASHED = 4;
    SINGLE_WHITE_DASHED = 5;
    DOUBLE_YELLOW_SOLID = 6;
    DOUBLE_WHITE_SOLID = 7;
    DOUBLE_YELLOW_SOLID_FAR_DASHED_NEAR = 8;
    DOUBLE_YELLOW_DASHED_FAR_SOLID_NEAR = 9;
    CURB_RED = 10;
    CURB_YELLOW = 11;
    CURB = 12;
  }

  // Type of line divider.
  DividerType divider_type = 2;
}

// Defines lane information - centerline, boundaries, etc.
message Lane {
  // Identifier for the lane.
  string id = 1;

  // List of center line segments.
  LineDivider center_line = 2;

  // Left lane boundary.
  LineDivider left_lane_boundary = 3;

  // Right lane boundary.
  LineDivider right_lane_boundary = 4;
}

// The geometry of the edges of zone, represented as a chain of polylines to form a polygon.
message Boundary{
  // List of edge of boundary polygon.
  repeated LineDivider edges = 1;
}

// Defines zone information.
message Zone {
  // Identifier for the zone.
  string id = 1;

  // Type of Zone, like cross-walk.
  string type = 2;

  // Note: the polygon can be a polyline.
  repeated Boundary boundaries = 3;
}

// Represents a map -- either discrete segments or a pointer to an external data object (e.g. for rasterized maps).
message LocalMapView {
  // List of Lanes in the map.
  repeated Lane lanes = 1;

  // List of zones, such as crosswalk regions, intersections.
  repeated Zone zones = 2;

  // An id to store reference to map files and position in them.
  string external_map_id = 3;

  // A general encoding of map information.
  google.protobuf.Any map_data = 4;

  // General meta information of the map.
  string map_meta_info = 5;

}

// Transform from Earth centric coordinates to Local coordinate.
message LocalEarthTransform {
  // Unique slice identifier (See dgp.idenfiers.proto).
  // Copy from sample ID to ensure one-one match between a localmapview and sample in a scene.
  DatumId frame_id = 1;

  // Pose of this sample from
  Pose pose = 2;
}

// Map of a scene which consist list of lanes and zones.
message LocalMap {
  // List transformations from earth coord to vehicle coord.
  repeated  LocalEarthTransform transforms = 1;

  // Map in a scene.
  LocalMapView map = 2;
}

// Traffic light states and association with map elements.
message TrafficLightState {
  // The id of state.
  string state_id = 1;

  // The id of the map element for the state. Can refer to lanes or other map elements.
  string map_element_id_from = 2;

  // The id of the map element transition to. Can refer to lanes or other map elements.
  string map_element_id_to = 3;

  // The state of the traffic light.
  string state = 4;

  // The start and stop time of the state interval.
  google.protobuf.Timestamp timestamp_start = 5;
  google.protobuf.Timestamp timestamp_end = 6;

  // The stop point(s) for this traffic light state.
  // positions that the agent should stop / not cross according to the state.
  repeated Point3D stop_point = 7;

  // The source of the traffic light state inference (annotations, machine perception / platform, etc).
  // Free-form text, can be a json.
  string information_source = 8;

  // Type of traffic light / control signal.
  string traffic_light_type = 9;

  // Additional information about the state. Usually as a json dictionary.
  string additional_state_info = 10;
}